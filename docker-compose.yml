version: "3.8"
services:
    web:
        container_name: web
        restart: always
        build:
            context: ./
        ports:
            - "8080:8080"
        depends_on:
            db:
                condition: service_healthy
        logging:
            options:
                awslogs-stream: web
    db:
        image: postgres
        container_name: db
        restart: always
        environment:
            POSTGRES_DB: main
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        expose:
            - "5432"
        ports:
            - "5432:5432"
        volumes:
            - db:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d main -h localhost -U postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5
        logging:
            options:
                awslogs-stream: db
    nginx:
        image: nginx:latest
        restart: always
        container_name: nginx
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        volumes:
            - ./:/var/www
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - /etc/letsencrypt:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
            - ./dhparam:/etc/ssl/certs
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - web
        logging:
            options:
                awslogs-stream: nginx
    certbot:
        image: certbot/certbot
        restart: always
        container_name: certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        volumes:
            - /etc/letsencrypt:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        depends_on:
            - nginx
        logging:
            options:
                awslogs-stream: certbot

# Volumes
volumes:
    db:
        driver: local
